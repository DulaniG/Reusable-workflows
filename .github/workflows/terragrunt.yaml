name: Terragrunt Action

on:
  workflow_call:
    inputs:
      Terraform_version:
        description: 'Terraform version'
        required: true
        type: string
      Terragrunt_version:
        description: 'Terragrunt version'
        required: true
        type: string
      Working_Directory:
        description: 'Working directory'
        required: true
        type: string
      AWS_region:
        description: 'AWS region'
        required: true
        type: string
      Action:
        description: 'Terraform plan/Apply/format'
        required: true
        type: string

jobs:
  terraform_action:
    name: Terragrunt checks
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        if: ${{ github.event.pull_request.merged == false && inputs.Action == 'format' }}
        with:
          tf_version: ${{ inputs.Terraform_version }}
          tg_version: ${{ inputs.Terragrunt_version }}
          tg_dir: ${{ inputs.Working_Directory }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_region }}

      - name: Plan
        if: ${{ github.event.pull_request.merged == false && inputs.Action == 'plan' }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ inputs.Terraform_version }}
          tg_version: ${{ inputs.Terragrunt_version }}
          tg_dir: ${{ inputs.Working_Directory }}
          tg_command: 'plan'

      - name: Deploy
        if: ${{ github.event.pull_request.merged == true && inputs.Action == 'apply' }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ inputs.Terraform_version }}
          tg_version: ${{ inputs.Terragrunt_version }}
          tg_dir: ${{ inputs.Working_Directory }}
          tg_command: 'apply'
